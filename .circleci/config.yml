version: 2.1

orbs:
    codecov: 'codecov/codecov@3.0.0'

.env_common: &env_common
    SHELL: '/bin/bash'

.env_composer: &env_composer
    COMPOSER_NO_INTERACTION: '1'
    COMPOSER_MEMORY_LIMIT: '-1'
    COMPOSER_DISABLE_XDEBUG_WARN: '1'
    COMPOSER_CACHE_DIR: '/home/circleci/.cache/composer'

executors:
    php_min:
        environment:
            <<: *env_common
            <<: *env_composer

        docker:
            -
                name: 'main'
                image: 'circleci/php:8.0'

    php_plus1:
        environment:
            <<: *env_common
            <<: *env_composer
        docker:
            -
                name: 'main'
                image: 'circleci/php:8.0'

    php_plus2:
        environment:
            <<: *env_common
            <<: *env_composer
        docker:
            -
                name: 'main'
                image: 'cimg/php:8.1'


commands:
    install_requirements:
        description: 'Install requirements'
        steps:
            -
                run:
                    name: 'Install requirements - PHP extension: pcov'
                    command: |
                        sudo pecl install pcov
                        if php -m | grep pcov ; then
                            exit 0
                        fi

                        iniDir="$(php -i | grep --only-matching --perl-regexp '(?<=Scan this dir for additional \.ini files => ).+')"
                        sudo mkdir -p "${iniDir}"
                        echo 'extension=pcov' | sudo tee "${iniDir}/pcov.ini"

    composer_install:
        description: 'Install Composer dependencies with cache restore and save'
        steps:
            -
                restore_cache:
                    name: 'Composer - cache restore'
                    keys:
                        - 'composer-{{ checksum "./composer.lock" }}-2'

            -
                run:
                    name: 'Composer - install'
                    command: >
                        composer install --no-progress

            -
                save_cache:
                    name: 'Composer - cache save'
                    key: 'composer-{{ checksum "./composer.lock" }}-2'
                    paths:
                        - '~/.cache/composer/'

    lint:
        description: 'Run lint'
        steps:
            -
                run:
                    name: 'Run PHPCS'
                    command: 'composer run lint'

    test_unit:
        description: 'Run unit tests'
        steps:
            -
                run:
                    name: 'Run unit tests'
                    command: 'composer run test'
            -
                store_test_results:
                    name: 'Store unit test results'
                    path: './tests/_log/machine/junit'
            -
                codecov/upload:
                    flags: 'unit'
                    file: './tests/_log/machine/coverage/coverage.xml'

jobs:
    build:
        executor: 'php_min'
        working_directory: '~/repo'
        steps:
            - 'checkout'
            - 'composer_install'
    lint:
        executor: 'php_min'
        working_directory: '~/repo'
        steps:
            - 'checkout'
            - 'composer_install'
            - 'lint'
    test_php_min:
        executor: 'php_min'
        working_directory: '~/repo'
        steps:
            - 'install_requirements'
            - 'checkout'
            - 'composer_install'
            - 'test_unit'
    test_php_plus1:
        executor: 'php_plus1'
        working_directory: '~/repo'
        steps:
            - 'install_requirements'
            - 'checkout'
            - 'composer_install'
            - 'test_unit'
    test_php_plus2:
        executor: 'php_plus2'
        working_directory: '~/repo'
        steps:
            - 'install_requirements'
            - 'checkout'
            - 'composer_install'
            - 'test_unit'

workflows:
    lint_and_test:
        jobs:
            -
                build: {}
            -
                lint:
                    requires:
                        - 'build'
            -
                test_php_min:
                    requires:
                        - 'build'
            -
                test_php_plus1:
                    requires:
                        - 'build'
            -
                test_php_plus2:
                    requires:
                        - 'build'
